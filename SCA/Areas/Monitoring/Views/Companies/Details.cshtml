@using SCA.Areas.Monitoring.Models
@model CompanyModel

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="col-md-5">
                <div class="row">
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-10">
                        @Html.Kendo().TextBoxFor(model => model.Name).HtmlAttributes(new { @class = "col-md-10" })
                    </div>
                </div>

                <div class="row">
                    @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.Kendo().TextBoxFor(model => model.Comment)
                    </div>
                </div>

                <div class="row">
                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                       @(Html.Kendo().TextBoxFor(x => x.Status))
                    </div>
                </div>

                <div class="row">
                    @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @(Html.Kendo().TextBoxFor(x => x.Type))
                    </div>
                </div>

                <div class="row">
                    @Html.LabelFor(model => model.Size, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @(Html.Kendo().TextBoxFor(x => x.Size))
                    </div>
                </div>

                <div class="row">
                    @Html.LabelFor(model => model.Sector, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @(Html.Kendo().TextBoxFor(x => x.Sector))
                    </div>
                </div>

                <div class="row">
                    @Html.LabelFor(model => model.OwnerName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @(Html.Kendo().TextBoxFor(x => x.OwnerName))
                    </div>
                </div>
            </div>
            <div class="col-md-7">
                @(Html.Kendo().Grid<SiteModel>()
                      .Name("grid")
                      .Columns(columns =>
                      {
                          columns.Bound(c => c.Id).Hidden(true);
                          //columns.Bound(c => c).Filterable(false).Sortable(false).Title("<div><input type='checkbox'></div>").Width(50);
                          //columns.Bound(c => c.CreateDateAsString).Title("Дата создания").Width(150);
                          columns.Bound(c => c.Name).Title("Название").Width(150);
                          columns.Bound(c => c.Company).Title("Компания").Width(120);
                          columns.Bound(c => c.PagesCount).Title("К-во страниц").Width(120);
                          //columns.Bound(c => c.Name).Title("Действия").Width(120); ;

                      })
                      .Filterable()
                      .ColumnMenu(c => c.Columns(false))
                      .Resizable(resizable => resizable.Columns(true))
                      .Reorderable(reorderable => reorderable.Columns(true))
                      .Scrollable()
                      .Sortable()
                      .Pageable(pageable => pageable
                          .Refresh(true)
                          .PageSizes(true)
                          .ButtonCount(5))

                      .DataSource(dataSource => dataSource
                          .Ajax()
                          .Read(read => read.Action("List_Read", "Site", new { id = Model.Id })))
                      )
                )
            </div>
        </div>
        <div class="row">
            <div class="col-md-offset-2 col-md-10">
                <br/>
                <a href ="@Url.Action("List")">Back to list</a>
                @*<input type="submit" value="Сохранить" class="btn btn-default" />*@
            </div>
        </div>
    </div>
}