@model SCA.Areas.Monitoring.Models.LeadModel

@{
    ViewBag.Title = "Lead";
}
<script>
    function onContactData() {
        return {
            contains: $("#ContactComplit").val()
        };
    };
    function onLeadTypeData() {
        return {
            contains: $("#LeadTypeComplit").val()
        };
    };
    function onSelect_Loc(e) {
        var item = this.dataItem(e.item.index());
        $('#ContactId').val(item.Id);
    };
    function onSelectType(e) {
        var item = this.dataItem(e.item.index());
        $('#LeadTypeId').val(item.Id);
    }
</script>
@using (Html.BeginForm())
{
    @Html.Kendo().TextBoxFor(model => model.Id).HtmlAttributes(new { @style = "display: none" })
    @Html.Kendo().TextBoxFor(model => model.ContactId).HtmlAttributes(new { @style = "display: none" })
    @Html.Kendo().TextBoxFor(model => model.LeadTypeId).HtmlAttributes(new { @style = "display: none" })
    <div class="form-group">
        @Html.LabelFor(model => model.ContactName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @(Html.Kendo().AutoCompleteFor(x => x.ContactName)
                              .Name("ContactComplit")
                              .DataTextField("Name")
                              .MinLength(2)
                              .Events(e => e.Select("onSelect_Loc"))
                              .DataSource(source =>
                              {
                                  source.Read(read =>
                                  {
                                      read.Action("GetContactsContains", "Contacts")
                                          .Data("onContactData");
                                  })
                                      .ServerFiltering(true);
                              })
            )
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.LeadType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
                @(Html.Kendo().AutoCompleteFor(x => x.LeadType)
                    .Name("LeadTypeComplit")
                    .DataTextField("Name")
                    .MinLength(2)
                    .Events(e => e.Select("onSelectType"))
                    .DataSource(source =>
                    {
                        source.Read(read =>
                        {
                            read.Action("GetLeadTypes", "LeadType")
                            .Data("onLeadTypeData"); ;
                        }).ServerFiltering(true);
                    })
                )
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
}