@model SCA.Areas.Monitoring.Models.ContactModel

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.Kendo().TextBoxFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.Kendo().TextBoxFor(model => model.Email)
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @(Html.Kendo().TextBoxFor(x => x.Status))
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReadyToSell, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @(Html.Kendo().TextBoxFor(x => x.ReadyToSell))
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CompanyName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @(Html.Kendo().TextBoxFor(x => x.CompanyName))
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReadyToBuyScore, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.Kendo().NumericTextBoxFor(model => model.ReadyToBuyScore)
                @Html.ValidationMessageFor(model => model.ReadyToBuyScore, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AgeCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @(Html.Kendo().TextBoxFor(x => x.AgeDirection))
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.Kendo().DatePickerFor(model => model.BirthDate)
                @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.Kendo().TextBoxFor(model => model.Comment)
                @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @(Html.Kendo().TextBoxFor(x => x.Gender))
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContactType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @(Html.Kendo().TextBoxFor(x => x.ContactType))
            </div>
        </div>
    </div>
}
<div>
    @Html.ActionLink("Back to List", "List")
</div>
