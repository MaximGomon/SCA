@using Kendo.Mvc.UI
@using SCA.Areas.Monitoring.Models

<style>
    
   .k-state-selected a {
       color: #fff;
    }

   .table {
       overflow: hidden;
       text-overflow: ellipsis;
       white-space: nowrap;
   }

</style>

@section content_header{
    <h1><img src="~/Content/themes/admin/img/contacts.png" /> Контакты</h1>
    @Html.GetBreadcrumb("fa fa-dashboard", null, "Мониторинг", "Контакты")
}
@section content_box_header{
   <div class="btn-group" role="group" aria-label="...">
       <a href="@Url.Action("Add","Contacts")" class="btn btn-sm btn-success"><i class="fa fa-plus-circle"></i> Добавить</a>
       <button class="btn btn-default btn-sm"><i class="fa fa-tags"></i> Теги</button>
       <div class="btn-group" role="group">
           <button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
               Экспорт
               <span class="caret"></span>
           </button>
           <ul class="dropdown-menu">
               <li><a href="#"><i class="fa fa-file-excel-o"></i> Excel</a></li>
               <li><a href="#"><i class="fa fa-file-pdf-o"></i> Pdf</a></li>
           </ul>
       </div>
    </div>
    <hr class="hr-top" />
}



@(Html.Kendo().Grid<ContactModel>()
      .Name("grid")
      .Columns(columns =>
      {
          columns.Bound(c => c.Id).Hidden(true);
          //columns.Bound(c => c).Filterable(false).Sortable(false).Title("<div><input type='checkbox'></div>").Width(50);
          //columns.Bound(c => c.CreateDateAsString).Title("Дата создания").Width(150);
          //columns.Bound(c => c.).Title("<div class='text-center'>Последняя <br/>активность</div>").Width(150);
          columns.Bound(c => c.ContactIp).Title("Ip");
          columns.Template(@<text>
                               @Html.ActionLink(@item.Name, "Edit", "Tag", new { id = @item.Id })
                            </text>)
              .ClientTemplate("<a href='/Monitoring/Contacts/Details/#= Id#'>#=Name#</a>").Title("ФИО");
          columns.Bound(c => c.Email).Title("E-mail");
          columns.Template(@<text>
             @Html.ActionLink(@item.ContactLink, "Details", "Contacts", new { id = @item.Id })
          </text>)
              .ClientTemplate("<a href='#=ContactLink#' target='_blank'>#=ContactLink#</a>").Title("Link");
          //columns.Bound(c => c.Comment).Title("Comment");
          columns.Bound(c => c.Gender).Title("Gender");
          columns.Bound(c => c.CreateDate).Title("DateDirthday");

          //columns.Bound(c => c.ReadyToSell).Title("<div class='text-center'>Готовность <br/>к продаже</div>").Width(150);
          //columns.Bound(c => c.CompanyName).Title("Компания").Width(120);
          //columns.Bound(c => c.Name).Title("Важность").Width(120);
          //columns.Bound(c => c.ReadyToBuyScore).Title("Общий балл").Width(150); ;
          //columns.Bound(c => c.Name).Title("Действия").Width(120); ;

      })
      .Filterable()
      .Selectable(s=>s.Mode(GridSelectionMode.Single))
      .ColumnMenu(c => c.Columns(false))
      .Resizable(resizable => resizable.Columns(true))
      .Reorderable(reorderable => reorderable.Columns(true))
      //.Scrollable()
      .Sortable()
      .Pageable(pageable => pageable
          .Refresh(true)
          .PageSizes(true)
          .ButtonCount(5))

      .DataSource(dataSource => dataSource
          .Ajax()
          .Read(read => read.Action("List_Read", "Contacts"))
      ))





